on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: pkgdown

jobs:
  pkgdown:
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      isExtPR: ${{ github.event.pull_request.head.repo.fork == true }}
      isPush: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master

      - uses: r-lib/actions/setup-pandoc@master

      - uses: r-lib/actions/setup-tinytex@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          install.packages("remotes")
          # To get links for homepage
          remotes::install_cran("devtools")
          remotes::install_deps(dependencies = TRUE)
          remotes::install_dev("pkgdown")
        shell: Rscript {0}

      - name: Install package
        run: R CMD INSTALL .

      - name: Deploy package
        if: contains(env.isPush, 'true')
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE)'

      - name: Create website and another page
        #if: contains(env.isExtPR, 'false')
        run: |
          Rscript -e 'pkgdown::build_site()'
          Rscript -e 'pkgdown::build_home(override=list(destination="cosmo", template = list(params=list( bootswatch = "cosmo"))))'

      - name: Move files
        #if: contains(env.isExtPR, 'false')
        run: |
          cp -r ./cosmo ./docs/dev


      - name: Deploy to Netlify
        #if: contains(env.isExtPR, 'false')
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './docs/dev'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message:
            'Deploy from GHA: ${{ github.event.pull_request.title || github.event.head_commit.message }} (${{ github.sha }})'
          # these all default to 'true'
          enable-pull-request-comment: false
          enable-commit-comment: false
          # enable-commit-status: true
          #o verwrites-pull-request-comment: true
        timeout-minutes: 1
